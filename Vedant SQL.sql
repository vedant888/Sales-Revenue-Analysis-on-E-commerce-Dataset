Create Database Arbor
use Arbor

select * from [dbo].[5k+ecommerce_dataset]

--1.What is the total revenue generated month-wise?
--➤ Helps analyze monthly trends and seasonality.

SELECT 
    FORMAT(CAST(PurchaseDate AS DATE), 'yyyy-MM') AS Month,
    SUM(Revenue) AS Total_Revenue
FROM 
    [dbo].[5k+ecommerce_dataset]
GROUP BY 
    FORMAT(CAST(PurchaseDate AS DATE), 'yyyy-MM')
ORDER BY 
    Month;


--2.Which product categories generate the highest revenue?
--➤ Identifies best-performing product lines.

SELECT 
    Category,
    SUM(Revenue) AS Total_Revenue
FROM 
    [dbo].[5k+ecommerce_dataset]
GROUP BY 
    Category
ORDER BY 
    Total_Revenue DESC;


--3.Who are the top 10 customers by total revenue?
--➤ Focus retention or loyalty programs on high-value users.

SELECT TOP 10 
    CustomerID,
    SUM(Revenue) AS Total_Revenue
FROM 
     [dbo].[5k+ecommerce_dataset]
GROUP BY 
    CustomerID
ORDER BY 
    Total_Revenue DESC;


--4.What is the average order value over time?
--➤ Tracks spending patterns of users.

SELECT 
    FORMAT(CAST(PurchaseDate AS DATE), 'yyyy-MM') AS Month,
    SUM(Revenue) * 1.0 / COUNT(DISTINCT OrderID) AS Avg_Order_Value
FROM 
     [dbo].[5k+ecommerce_dataset]
GROUP BY 
    FORMAT(CAST(PurchaseDate AS DATE), 'yyyy-MM')
ORDER BY 
    Month;


--5.Which locations contribute the most to overall sales?
--➤ Supports geo-targeted marketing strategies.

SELECT Location, SUM(Revenue) AS TotalRevenue
FROM [dbo].[5k+ecommerce_dataset]
GROUP BY Location
ORDER BY TotalRevenue DESC;


--6.Which payment method is used most frequently?
--➤ Assists in optimizing payment gateway support.

SELECT PaymentMethod, COUNT(*) AS UsageCount
FROM  [dbo].[5k+ecommerce_dataset]
GROUP BY PaymentMethod
ORDER BY UsageCount DESC

	
--7.What is the trend of returned products and its impact on revenue?
--➤ Filters Returned = TRUE and analyzes associated Revenue loss.

SELECT 
    CAST(PurchaseDate AS DATE) AS ReturnDate, 
    COUNT(*) AS ReturnedCount, 
    SUM(Revenue) AS RevenueLoss
FROM [dbo].[5k+ecommerce_dataset]
WHERE Returned = 1
GROUP BY CAST(PurchaseDate AS DATE)
ORDER BY ReturnDate;


--8.What is the total discount amount given in the last quarter?
--➤ Tracks impact of promotions and discounts on revenue.

SELECT 
    SUM(ISNULL(Price, 0) * ISNULL(Quantity, 0) * (ISNULL([Discount(%)], 0) / 100.0)) AS TotalDiscount
FROM [dbo].[5k+ecommerce_dataset]
WHERE TRY_CAST(PurchaseDate AS DATE) >= DATEADD(MONTH, -3, GETDATE());


SELECT MIN(PurchaseDate), MAX(PurchaseDate)
FROM [dbo].[5k+ecommerce_dataset];

--9.Which courier partner has the highest average delivery time?
--➤ Impacts customer satisfaction and repeat purchases.

SELECT CourierPartner, AVG("ShipmentTime_days") AS AvgDeliveryTime
FROM [dbo].[5k+ecommerce_dataset]
GROUP BY CourierPartner
ORDER BY AvgDeliveryTime DESC

select * from  [dbo].[5k+ecommerce_dataset]


--10.What is the daily sales trend for the past 90 days?
--➤ Aids in monitoring short-term performance.

SELECT CAST(PurchaseDate AS DATE) AS SaleDate, 
       SUM(Revenue) AS DailyRevenue
FROM [dbo].[5k+ecommerce_dataset]
WHERE PurchaseDate >= DATEADD(DAY, 90, CAST(GETDATE() AS DATE))
GROUP BY CAST(PurchaseDate AS DATE)
ORDER BY SaleDate;




--11.How much revenue is generated by each product category over time?
--➤ Shows performance trend by category, useful for inventory decisions.
SELECT 
  Category, 
  CAST(PurchaseDate AS DATE) AS SaleDate, 
  SUM(Revenue) AS Revenue
FROM [dbo].[5k+ecommerce_dataset]
GROUP BY 
  Category, 
  CAST(PurchaseDate AS DATE)
ORDER BY 
  Category, 
  SaleDate;









